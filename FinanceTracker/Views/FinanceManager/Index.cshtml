@using System.Security.Claims
@using FinanceTracker.Models.Enums
@using FinanceTracker.ViewModel
@{
    ViewData["Title"] = "Finance Manager";
}

@model FinanceTrackerIndexViewModel

@{

    var model = Model;
    var groupedTransactions = Model.transactionListItems
        .OrderBy(t => t.TimeStamp)
        .GroupBy(t => new { t.TimeStamp.Year, t.TimeStamp.Month });
}


@if (User.Identity.IsAuthenticated)
{
    
    var adminString = Enum.GetName(typeof(Role), Role.admin)!;
    

    //@foreach (var expense in Model.Expenses)
    //{
    //    <h1>@(expense.amount) at @(expense.TimeStamp)</h1>
    //}
    //
    //@foreach (var Income in Model.Incomes)
    //{
    //    <h1>@(Income.amount) at @(Income.TimeStamp)</h1>
    //} 
    <p class="display-1">@(User.FindFirst("userName").Value.ToUpper())'s  cash flow</p>


    <div id="createModal"></div>
    <div id="editContainer"></div>


    <table class="table">
        <thead>
            <tr>
                <th scope="col">Type</th>
                <th scope="col">Amount</th>
                <th scope="col">Time</th>
                <th scope="col">Category</th>
                <th scope="col" >Actions</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var group in groupedTransactions)
            {

                var balance = (int)group.Sum(transaction => transaction.Amount);
                <tr>
                    <td colspan="4">
                        <h2>@(new DateTime(group.Key.Year, group.Key.Month, 1).ToString("MMMM yyyy"))</h2>
                        
                    </td>
                    <td colspan="1">
                        <h4>Balance of the month: <span class="@(balance>0?"text-primary":"text-danger")">@balance</span></h4>
                    </td>
                </tr>

                @foreach (TransactionViewModel transaction in group)
                {
                    <tr class="@(transaction.Type =="Income"?"":"table-secondary")">
                        <th scope="row">@transaction.Type.ToUpper()</th>
                        <td>@(transaction.Amount)€</td>
                        <td>@(transaction.TimeStamp)</td>
                        <td>@(transaction.Category)</td>
                        <td><button id="editBtn" data-id=@(transaction.Id) data-type=@(transaction.Type) class="btn btn-outline-primary me-1">Edit</button><button id="deleteBtn" data-id=@(transaction.Id) class="btn btn-outline-danger">Delete</button></td>
                       
                    </tr>
                }
            }
        </tbody>
    </table>
    
    

}
else
{
    <h1>hello, Please log in first</h1>
}



@section Scripts{
    <script src="~/js/EditFormToggle.js"></script>
    <script src="~/js/AddTransactionModal.js"></script>
    <script src="~/js/DeleteForm.js"></script>

}