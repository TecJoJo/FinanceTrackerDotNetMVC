@using FinanceTracker.Models.Enums
@using FinanceTracker.ViewModel
@using System.Security.Claims
@{
    ViewData["Title"] = "Home Page";
}



@model HomeIndexViewModel




@if (User.Identity.IsAuthenticated)
{
    <h1>Welcome @Model.UserName
    </h1>
    var adminString = Enum.GetName(typeof(Role), Role.admin)!;
    var userString = Enum.GetName(typeof(Role), Role.user)!;
    @if (User.FindFirst(ClaimTypes.Role).Value == adminString || User.FindFirst(ClaimTypes.Role).Value == userString)
    {
        <div class="row">
            <div class="col-8">
                <div class="row justify-content-center text-center">
                    <h1>Your cash flow in the past 30 days: </h1>
                    <div class="col">

                        <canvas id="barChart"></canvas>
                    </div>

                </div>

                <div class="row justify-content-center text-center">
                    <h1>Your cash flow in the past 12 months: </h1>
                    <div class="col">
                        <canvas id="comboChart"></canvas>
                    </div>
                </div>

            </div>

            <div class="col-4" >

                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Tips</li>
                    <li class="list-group-item">In the last 30 days</li>
                    <li class="list-group-item">Your savings are<span class="@(Model.Last30DaysSavings>0?"text-primary":"text-danger") fw-bold">@Model.Last30DaysSavings</span>€</li>
                    <li class="list-group-item">A fourth item</li>
                    <li class="list-group-item">And a fifth one</li>
                </ul>
            </div>
        </div>

    }
    else
    {
      <h1>You are visiting with an visitor account which have no access to the Finance overview, please upgrade your plan</h1>
    }



}
else
{
    <h1>hello, Please log in first</h1>
}






<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/chart441.js"></script>
<script >


      
    
    const ctx1 = document.getElementById('barChart');

    

    const labels = @Html.Raw(Json.Serialize(Model.ChartsData.DateLabels))
    const data = {
        labels: labels,
        datasets: [
            {
                label: 'Income',
                data: @Html.Raw(Json.Serialize(Model.ChartsData.DailyIncomes)),
                borderColor: "blue",
                backgroundColor: "blue",
            },
            {
                label: 'Expense',
                data: @Html.Raw(Json.Serialize(Model.ChartsData.DailyExpenses)),
                borderColor: "red",
                backgroundColor: "red",
            }
        ]
    };

    const config = {
        type: 'bar',
        data: data,
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Financial overview on the past 30 days'
                }
            }
        },
    };
   
    new Chart(ctx1,config)

    const ctx2 = document.getElementById('comboChart');
 
    const comboLabels = @Html.Raw(Json.Serialize(Model.ChartsData.MonthLabels));
    const comboData = {
        labels: comboLabels,
        datasets: [
            {
                label: 'Incomes',
                data: @Html.Raw(Json.Serialize(Model.ChartsData.MonthIncomes)),
                borderColor: "blue",
                backgroundColor: "blue",
                order: 1
            },
            {
                label: 'Expenses',
                data: @Html.Raw(Json.Serialize(Model.ChartsData.MonthExpenses)),
                borderColor: "red",
                backgroundColor: "red",
                
                order: 1
            },
            {
                label: 'Savings',
                data: @Html.Raw(Json.Serialize(Model.ChartsData.MonthSavings)),
                borderColor: "green",
                backgroundColor: "green",
                type: 'line',
                order: 0
            },
        ]
    };

    const config2 = {
        type: 'bar',
        data: comboData,
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Financial overview on the last 12 months'
                }
            }
        },
    };

    new Chart(ctx2,config2)
    
</script>
